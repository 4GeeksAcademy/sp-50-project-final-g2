"""empty message

Revision ID: 1201b8a72950
Revises: 
Create Date: 2024-03-22 13:32:35.756303

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1201b8a72950'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('centers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('address', sa.String(length=20), nullable=False),
    sa.Column('manager', sa.String(length=20), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compositions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meals', sa.Integer(), nullable=False),
    sa.Column('cost_meals', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('rol', sa.Enum('Admin', 'Jefe de Compras', 'Cocinero', name='rol'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('composition_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('units_recipe', sa.Integer(), nullable=False),
    sa.Column('cost_unit_line', sa.Integer(), nullable=False),
    sa.Column('composition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['composition_id'], ['compositions.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delivery_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('sum_costs', sa.Integer(), nullable=False),
    sa.Column('sum_totals', sa.Integer(), nullable=False),
    sa.Column('sum_vat', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Hoja de Envio', 'Albaran', name='status'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturing_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('delivery_date', sa.DateTime(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Pendiente', 'En Proceso', 'Fabricado', 'Almacenado', 'Enviado', name='status'), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('previsions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('references',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('category', sa.Enum('Alimento Fresco', 'Alimento Congelado', 'Conserva', 'Bebida', 'Licor', name='category'), nullable=False),
    sa.Column('units', sa.Enum('ud', 'gr', 'ml', 'kg', 'l', name='units'), nullable=False),
    sa.Column('id_suplier', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('vat', sa.Enum('4', '10', '21', name='vat'), nullable=False),
    sa.Column('purchase_format', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_suplier'], ['supliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delivery_note_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_cost', sa.Integer(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('vat', sa.Enum('4', '10', '21', name='vat'), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('delivery_note_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['delivery_note_id'], ['delivery_notes.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('line_recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('units', sa.Integer(), nullable=False),
    sa.Column('cost_unit', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['references.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prevision_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prevision_id', sa.Integer(), nullable=True),
    sa.Column('service', sa.Enum('Desayuno', 'Almuerzo', 'Cena', name='service'), nullable=False),
    sa.Column('pax_service', sa.Integer(), nullable=False),
    sa.Column('composition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['composition_id'], ['compositions.id'], ),
    sa.ForeignKeyConstraint(['prevision_id'], ['previsions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prevision_lines')
    op.drop_table('line_recipes')
    op.drop_table('delivery_note_lines')
    op.drop_table('references')
    op.drop_table('previsions')
    op.drop_table('manufacturing_orders')
    op.drop_table('delivery_notes')
    op.drop_table('composition_lines')
    op.drop_table('users')
    op.drop_table('supliers')
    op.drop_table('recipes')
    op.drop_table('compositions')
    op.drop_table('centers')
    # ### end Alembic commands ###
